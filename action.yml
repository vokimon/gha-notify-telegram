name: 'CI notifications on Telegram'
description: 'Notifies by Telegram about failed CI runs or successfull runs after previous failures in the branch'
inputs:
  token:
    description: "Telegram Bot Token"
  to:
    description: "Telegram Channel ID"
  report_green_to_green:
    description: "If false green to green transitions on a branch will not be reported."
    default: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Compile status and other info
      if: always()
      shell: bash
      run: |
        # https://docs.github.com/en/webhooks/webhook-events-and-payloads
        curl -s https://api.github.com/repos/${{github.repository}}/actions/runs?branch=${{ github.ref_name }} |
        jq -r '[.workflow_runs | sort_by(.created_at) | .[] | select(.name == "${{ github.workflow }}") | { id: .id,  branch: .head_branch, conclusion: .conclusion, message: .head_commit.message, created_at: .created_at }  ] | .[-4:]'
        LAST_RUN=$(
          curl -s https://api.github.com/repos/${{github.repository}}/actions/runs?branch=${{ github.ref_name }}  |
          jq -r '[.workflow_runs | sort_by(.created_at) | .[] | select(.name == "${{ github.workflow }}") | select(.id != ${{github.run_id}}) | { branch: .head_branch, conclusion: .conclusion }  ] | .[-1].conclusion // "new_branch"'
        )
        echo "LAST_RUN=$LAST_RUN"
        echo "CURRENT_RUN=${{job.status}}"
        echo "RUN_ID=${{github.run_id}}"
        echo "REPORT_GREEN_TO_GREEN=${{inputs.ignore_green_to_green == false}}"
        function status_icon() {
          case "$1" in
          "failure" ) echo '❌';;
          "success" ) echo '✅';;
          "new_branch") echo '✨';;
          "queued") echo '⏳';;
          "in_progress") echo '⚙';;
          "cancelled") echo '🚫';;
          "skipped") echo '⏭️';;
          "timed_out") echo '👴';;
          *) echo "$1";;
          esac
        }
        LAST_RUN_ICON="$( status_icon $LAST_RUN)"
        THIS_RUN_ICON="$( status_icon ${{ job.status }} )"
        echo "THIS_RUN=${{ job.status }}" >> $GITHUB_ENV
        echo "LAST_RUN=$LAST_RUN" >> $GITHUB_ENV
        echo "LAST_RUN_ICON=$LAST_RUN_ICON" >> $GITHUB_ENV
        echo "THIS_RUN_ICON=$THIS_RUN_ICON" >> $GITHUB_ENV
        echo "THIS_RUN_LINK=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
        echo "REPO_NAME=${{github.event.repository.name}}" >> $GITHUB_ENV
        echo "REPO_LINK=https://github.com/${{ github.repository }}" >> $GITHUB_ENV
        echo "CHANGES_LINK=https://github.com/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_ENV
        printf "COMMIT_MESSAGE<<EOF\n%s\nEOF\n" "${{github.event.head_commit.message}}" >> "$GITHUB_ENV"
        echo "AVATAR_URL=${{ format('https://github.com/{0}.png', github.event.head_commit.author.username) }}" >> $GITHUB_ENV
        echo "AUTHOR_NAME=${{ github.event.head_commit.author.name }}" >> $GITHUB_ENV
        echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV

    - name: 📢 Telegram Notification
      uses: akeylimepie/telegram-action@main
      if: job.status != 'success' || env.LAST_RUN != 'success' || inputs.ignore_green_to_green == false

      # continue-on-error allows the build to succeed even when the notification fails
      # e.g. when other users, such as dependabot, push without access to the secrets
      continue-on-error: true
      with:
        token: ${{ inputs.token }}
        chat_id: ${{ inputs.to }}
        parse_mode: html
        #disable-web-page-preview: true
        text: |
          ${{ format('{0} → {1}: <b>{2}</b> <code>[{3}]</code>', env.LAST_RUN_ICON, env.THIS_RUN_ICON, env.REPO_NAME, env.BRANCH) }}

          Author: ${{ env.AUTHOR_NAME }}
          
          <blockquote>${{ env.COMMIT_MESSAGE }}</blockquote>

          <a href="${{ env.THIS_RUN_LINK }}">Details</a> · <a href="${{ env.REPO_LINK }}">Repository</a> · <a href="${{ env.CHANGES_LINK }}">Changes</a>

#    - name: 📢 Google Chat Notification
#      uses: SimonScholz/google-chat-action@main
#      if: job.status != 'success' || env.LAST_RUN != 'success' || inputs.ignore_green_to_green == false
#      # continue-on-error allows the build to succeed even when the notification fails
#      # e.g. when other users, such as dependabot, push without access to the secrets
#      continue-on-error: true
#      with:
#        webhookUrl: ${{ inputs.webhook }}
#        jobStatus: ${{ env.THIS_RUN }}
#        imageUrl: ${{ env.AVATAR_URL }}
#        imageAltText: ${{ env.AUTHOR_NAME }}
#        subtitle: ${{ env.COMMIT_MESSAGE }}
#        title: "${{ format('{0} -- [{1}]', env.REPO_NAME, env.BRANCH ) }}"


